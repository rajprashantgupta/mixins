@mixin boxShadow($property...) {
    -webkit-box-shadow: $property;
    -moz-box-shadow: $property;
    box-shadow: $property;
}

@mixin opacity($value: 0.5) {
    -webkit-opacity: $value;
    -moz-opacity: $value;
    -ms-opacity: $value;
    opacity: $value;
}

@mixin transform($property) {
    -webkit-transform: $property;
    -moz-transform: $property;
    -ms-transform: $property;
    -o-transform: $property;
    transform: $property;
}

@mixin transition($property...) {
    -webkit-transition: $property;
    -moz-transition: $property;
    -ms-transition: $property;
    -o-transition: $property;
    transition: $property;
}

@mixin animation($property...) {
    -webkit-animation: $property;
    -moz-animation: $property;
    -o-animation: $property;
    animation: $property;
}

@mixin border($property) {
    -webkit-border: $property;
    -moz-border: $property;
    -ms-border: $property;
    border: $property;
}

@mixin borderTop($property) {
    -webkit-border-top: $property;
    -moz-border-top: $property;
    -ms-border-top: $property;
    border-top: $property;
}

@mixin borderBottom($property) {
    -webkit-border-bottom: $property;
    -moz-border-bottom: $property;
    -ms-border-bottom: $property;
    border-bottom: $property;
}

@mixin borderLeft($property) {
    -webkit-border-left: $property;
    -moz-border-left: $property;
    -ms-border-left: $property;
    border-left: $property;
}

@mixin borderRight($property) {
    -webkit-border-right: $property;
    -moz-border-right: $property;
    -ms-border-right: $property;
    border-right: $property;
}

@mixin borderRadius($value...) {
    -webkit-border-radius: $value;
    -moz-border-radius: $value;
    -ms-border-radius: $value;
    border-radius: $value;
}

@mixin position($value: absolute) {
    @if $value==absolute {
        position: absolute;
    }

    @else if $value==relative {
        position: relative;
    }

    @else if $value==fixed {
        position: fixed;
    }

    @else {
        position: static;
    }
}

@mixin customItemCenter($top: 50%,
    $left: 50%,
    $moveLeft: -50%,
    $moveTop: -50%) {
    @include position(absolute);
    top: $top;
    left: $left;
    @include transform(translate($moveTop, $moveLeft));
}

@mixin grid($value: true) {
    @if $value {
        display: flex;
        display: -webkit-box;
        display: -moz-box;
        display: -ms-flexbox;
        display: -webkit-flex;
    }

    @else {
        display: block;
    }
}

@mixin flexBox {
    @include grid(true);
}

// row (default) | row-reverse | column | column-reverse
@mixin flexDirection($direction: row) {
    @if $direction==row-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: horizontal;
        -moz-box-direction: reverse;
        -moz-box-orient: horizontal;
    }

    @else if $direction==column {
        -webkit-box-direction: normal;
        -webkit-box-orient: vertical;
        -moz-box-direction: normal;
        -moz-box-orient: vertical;
    }

    @else if $direction==column-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: vertical;
        -moz-box-direction: reverse;
        -moz-box-orient: vertical;
    }

    @else {
        -webkit-box-direction: normal;
        -webkit-box-orient: horizontal;
        -moz-box-direction: normal;
        -moz-box-orient: horizontal;
    }

    -webkit-flex-direction: $direction;
    -ms-flex-direction: $direction;
    flex-direction: $direction;
}

// flex-start | flex-end | center | space-between | space-around
@mixin justifyContent($value: flex-start) {
    @if $value==flex-start {
        -webkit-box-pack: start;
        -moz-box-pack: start;
        -ms-flex-pack: start;
    }

    @else if $value==flex-end {
        -webkit-box-pack: end;
        -moz-box-pack: end;
        -ms-flex-pack: end;
    }

    @else if $value==space-between {
        -webkit-box-pack: justify;
        -moz-box-pack: justify;
        -ms-flex-pack: justify;
    }

    @else if $value==space-around {
        -ms-flex-pack: distribute;
    }

    @else {
        -webkit-box-pack: $value;
        -moz-box-pack: $value;
        -ms-flex-pack: $value;
    }

    -webkit-justify-content: $value;
    justify-content: $value;
}

// flex-start | flex-end | center | baseline | stretch
@mixin alignItems($value: stretch) {
    @if $value==flex-start {
        -webkit-box-align: start;
        -moz-box-align: start;
        -ms-flex-align: start;
    }

    @else if $value==flex-end {
        -webkit-box-align: end;
        -moz-box-align: end;
        -ms-flex-align: end;
    }

    @else {
        -webkit-box-align: $value;
        -moz-box-align: $value;
        -ms-flex-align: $value;
    }

    -webkit-align-items: $value;
    align-items: $value;
}

@mixin flexBoxCenter {
    @include flexBox();
    @include justifyContent(center);
    @include alignItems(center);
}